Quickstart to getting a broker running in development:

mkdir -p /var/tmp/$USER/quattor
rsync -avP -e ssh --delete quattorsrv:/var/quattor/templates /var/tmp/$USER/quattor
rsync -avP -e ssh --delete quattorsrv:/var/quattor/template-king /var/tmp/$USER/quattor
cd ~/dev/aquilon/aqd/1.1/src     # your shadow
cd lib/python2.5/aquilon/aqdb
./utils/REBUILD.sh

To start the broker, from the bin directory of your shadow and without a proid:
./twistd -no -l - aqd --noknc

This will start the broker in the foreground and have it skip knc for 
authentication and encryption.

To run the client against this server:
./aq.py --noknc --aqport=6901 [commands]

Try help for a list of commands, and help command for more details.

To stop aqd:
If running with -no (foreground), ctrl-c will bring the server down
gracefully.  Otherwise, kill -TERM `cat twistd.pid` works as well.


Below are notes for writing the wrapper scripts that will make this
look like the 1.0 aq/aqd...

To start aqd:
./twistd aqd

This will create a twistd.log in the current directory and daemonize the
process.  Run ./twistd with no args or ./twistd aqd --help (different)
for more options.

To start aqd but keep it in the foreground with logs going to stdout:
./twistd -no -l - aqd

Ditto, but without expecting to talk to knc:
./twistd -no -l - aqd --noknc

If running as cdb, make sure you have a keytab set up:
/ms/dist/kerberos/PROJ/krb5_keytab/prod/sbin/krb5_keytab

And then, assuming you are in a directory owned by your normal user id,
so cdb won't be able to write to ./aqd.pid:
./twistd -no -l - --pidfile=/var/tmp/cdb/aqd.pid aqd

Or as a daemon:
./twistd --pidfile=/var/tmp/cdb/aqd.pid --logfile=/var/tmp/cdb/aqd.log aqd

Adding --spew gives much twisted debug output.

To stop aqd:
If running with -no (foreground), ctrl-c will bring the server down
gracefully.  Otherwise, kill -TERM `cat twistd.pid` works as well.

To run aq:
./aq.py [commands]

To run aq without knc:
./aq.py --noknc --aqport=6901 [commands]

Options should be the same / similar to options to aq 1.0.

