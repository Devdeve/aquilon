# https://docs.python.org/2/library/logging.config.html#configuration-file-format
[loggers]
keys=root,change_management,sqlalchemy.engine,sqlalchemy.pool,sqlalchemy.orm,aquilon

[logger_root]
level=NOTSET
handlers=root

# This can be used for any components that use python logging
# Valid values are INFO, DEBUG, and WARNING
# For sqlalchemy, only INFO and DEBUG produce log messages.
[logger_change_management]
qualname=change_management
propagate=0
level=INFO
handlers=change_management

[logger_sqlalchemy.engine]
handlers=
level=WARNING
qualname=sqlalchemy.engine

[logger_sqlalchemy.pool]
handlers=
level=WARNING
qualname=sqlalchemy.pool

[logger_sqlalchemy.orm]
handlers=
level=WARNING
qualname=sqlalchemy.orm

[logger_aquilon]
handlers=
level=INFO
qualname=aquilon

[handlers]
keys=root,change_management

[handler_root]
# Use a BridgeLogHandler to tie python's logging to twisted.python.log.
class=BridgeLogHandler
args=()

[handler_change_management]
class=logging.handlers.RotatingFileHandler
level=INFO
formatter=change_management
# https://docs.python.org/2/library/logging.handlers.html#rotatingfilehandler
# logging.handlers.RotatingFileHandler(filename, mode='a', maxBytes=0, backupCount=0, encoding=None, delay=0)
# cmlogfile variable should be defined before loading logging config
# Example: logging.cmlogfile = 'path_to_file'
args=(cmlogfile, 'a', 104857600, 3)

[formatters]
keys=change_management

[formatter_change_management]
format=%(message)s
class=logging.Formatter