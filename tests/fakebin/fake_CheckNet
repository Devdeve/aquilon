#!/ms/dist/python/PROJ/core/2.5.0/bin/python
# ex: set expandtab softtabstop=4 shiftwidth=4: -*- cpy-indent-level: 4; indent-tabs-mode: nil -*-
# Copyright (C) 2008 Morgan Stanley
#
# This module is part of Aquilon
"""Fake the CheckNet command"""


from __future__ import with_statement

import sys
import os


def determine_output(args):
    """ Figure out which file has the necessary contents for the request."""
    hostname = None
    for i in range(len(args)):
        if args[i].startswith("-ho"):
            if i == len(args):
                print >>sys.stderr, "Missing argument for %s" % args[i]
                sys.exit(1)
            hostname = args[i+1]
            break
    if not hostname:
        print >>sys.stderr, "Missing -ho argument" % args[i]
        sys.exit(1)
    fakedir = os.path.realpath(os.path.join(os.path.dirname(__file__),
                                            "CheckNet.d"))
    if hostname == 'np06bals03' or hostname == '172.31.64.69':
        return os.path.join(fakedir,
            "CheckNet_-ho_np06bals03_camtable_-nobanner_-table_1_-noprompt.out")
    if hostname == 'np06fals01' or hostname == '172.31.88.5':
        return os.path.join(fakedir,
            "CheckNet_-ho_np06fals01_camtable_-nobanner_-table_1_-noprompt.out")
    # Somewhat fancier solution... not needed...
    #hostname_search = "_%s_" % hostname
    #for (dirpath, dirnames, filenames) in os.walk(fakedir):
    #    for filename in filenames:
    #        if filename.find(hostname_search) >= 0:
    #            return os.path.join(dirpath, filename)
    print >>sys.stderr, "No information found for host '%s'" % hostname
    sys.exit(1)

def fake_checknet(args):
    with open(determine_output(args)) as f:
        for line in f:
            sys.stdout.write(line)


if __name__=='__main__':
    fake_checknet(sys.argv)

