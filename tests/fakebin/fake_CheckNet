#!/usr/bin/env python2.6
# -*- cpy-indent-level: 4; indent-tabs-mode: nil -*-
# ex: set expandtab softtabstop=4 shiftwidth=4:
#
# Copyright (C) 2008,2010,2013  Contributor
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
"""Fake the CheckNet command"""


import sys
import os


def determine_output(args):
    """ Figure out which file has the necessary contents for the request."""
    hostname = None
    for i in range(len(args)):
        if args[i].startswith("-ho"):
            if i == len(args):
                print >>sys.stderr, "Missing argument for %s" % args[i]
                sys.exit(1)
            hostname = args[i+1]
            break
    if not hostname:
        print >>sys.stderr, "Missing -ho argument" % args[i]
        sys.exit(1)
    fakedir = os.path.realpath(os.path.join(os.path.dirname(__file__),
                                            "CheckNet.d"))
    template = "CheckNet_-ho_%s_camtable_-nobanner_-table_1_-noprompt.out"
    guess = os.path.join(fakedir, template % hostname)
    if os.path.exists(guess):
        return guess
    if hostname == 'np06bals03' or hostname == '172.31.64.69':
        return os.path.join(fakedir,
            "CheckNet_-ho_np06bals03_camtable_-nobanner_-table_1_-noprompt.out")
    if hostname == 'np06fals01' or hostname == '172.31.88.5':
        return os.path.join(fakedir,
            "CheckNet_-ho_np06fals01_camtable_-nobanner_-table_1_-noprompt.out")
    print >>sys.stderr, "No information found for host '%s'" % hostname
    sys.exit(1)

def fake_checknet(args):
    with open(determine_output(args)) as f:
        for line in f:
            sys.stdout.write(line)


if __name__=='__main__':
    fake_checknet(sys.argv)
