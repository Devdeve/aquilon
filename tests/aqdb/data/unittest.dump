#
# Define base data that gets loaded into the database at the beginning of
# the unittest.
#
# Note: the parser is DUMB. Don't try to do anything smart in this file.
#
# Basic syntax
# ------------
#
# The file contains a list of statements. Threr are two kinds of statements:
# object creation and macro definition. (Incomplete) BNF:
#
#	<statement> ::= <object definition> | <macro definition>
#	<macro definition> ::= <macro name> <object definition>
#	<macro name> ::= '@' <symbol>
#	<object definition> ::= <class name> '(' <param name> '=' <param value>[',' ...] ')'
#	<param value> ::= <literal> | <macro name> | <object definiton>
#	<literal> ::= <integer> | <float> | <string> | 'True' | 'False' | 'None'
#
# <class name> is a class defined in aquilon.aqdb.model.
#
# <object definition> can appear in two contexts: either as a statement, in
# which case it creates a new object, or as a reference in macro defintions or
# parameter values, in which case it means object lookup.
#
# When creating an object, the parameters are passed directly to the __init__()
# method of the given class. When looking up an object, the parameters are
# passed to the get_unique(..., compel=True) method of the given class.
#
# Literals can be integers, True/False, and strings. Strings should be between
# quotes (single or double), although the parser does not enforce that
# currently. Backslash-style escaping works between double quotes.
#
# White space is generally ignored.
#
# Macros
# ------
#
# Macros can be used as a shorthand when the same object is referenced many
# times by subsequently created objects. Macro names start with the '@'
# character. The rest of the name should be a valid Python identifier, although
# this is not enforced yet.

Realm(name="example.realm", trusted=False)

Role(name="nobody")
Role(name="operations")
Role(name="engineering")
Role(name="aqd_admin")
Role(name="maintech")
Role(name="unixops_l2")
Role(name="winops")

UserPrincipal(name="cdb", role=Role(name="aqd_admin"), realm=Realm(name="example.realm"))
UserPrincipal(name="otheruser", role=Role(name="nobody"), realm=Realm(name="example.realm"))

DnsEnvironment(name="internal")
DnsEnvironment(name="external")

NetworkEnvironment(name="internal", dns_environment=DnsEnvironment(name="internal"))

DnsDomain(name="ms.com")
DnsDomain(name="devin1.ms.com")
DnsDomain(name="devin2.ms.com")
DnsDomain(name="msad.ms.com", restricted=True)
DnsDomain(name="one-nyp.ms.com")
DnsDomain(name="the-ha.ms.com")
DnsDomain(name="new-york.ms.com")

User(name="otheruser", uid=1001, gid=1001, full_name="Other user", home_dir="/tmp")

Domain(name="prod", owner=UserPrincipal(name="cdb"),
       compiler="/ms/dist/elfms/PROJ/panc/prod/lib/panc.jar",
       comments="Production source domain.")
Domain(name="ny-prod", owner=UserPrincipal(name="cdb"),
       tracked_branch=Domain(name="prod"),
       compiler="/ms/dist/elfms/PROJ/panc/prod/lib/panc.jar",
       comments="Production source domain.")
Domain(name="break-consistency-domain", owner=UserPrincipal(name="cdb"),
       compiler="/ms/dist/elfms/PROJ/panc/prod/lib/panc.jar",
       comments="Cause consistency checker to fail.")

Sandbox(name="break-consistency-sandbox", owner=UserPrincipal(name="cdb"),
	compiler="/ms/dist/elfms/PROJ/panc/prod/lib/panc.jar",
        comments="Cause consistency checker to fail.",
	base_commit='0000000000')
Sandbox(name="othersandbox", owner=UserPrincipal(name="otheruser"),
	compiler="/ms/dist/elfms/PROJ/panc/prod/lib/panc.jar",
        comments="Test if owner is deleted",
	base_commit='0000000000')

Archetype(name="aquilon", is_compileable=True)
Archetype(name="aurora", is_compileable=True)
Archetype(name="filer", is_compileable=True)
Archetype(name="storagecluster", cluster_type="storage", outputdesc="Storage")
Archetype(name="vmhost", is_compileable=True)
Archetype(name="esx_cluster", is_compileable=True, cluster_type="esx", outputdesc="ESX")
Archetype(name="netinfra", is_compileable=True)

Archetype(name="windows")
Archetype(name="f5")

# Define some macros for later use
@aquilon Archetype(name="aquilon")
@aurora Archetype(name="aurora")
@vmhost Archetype(name="vmhost")
@esxcluster Archetype(name="esx_cluster")
@windows Archetype(name="windows")

OperatingSystem(archetype=@aurora, name="linux", version="generic")
OperatingSystem(archetype=@windows, name="windows", version="generic")
OperatingSystem(archetype=@windows, name="windows", version="nt61e")
OperatingSystem(archetype=@vmhost, name="esxi", version="4.0.0")
OperatingSystem(archetype=@vmhost, name="esxi", version="4.1.0-u1")
OperatingSystem(archetype=Archetype(name="filer"), name="ontap", version="7.3.3p1")
OperatingSystem(archetype=Archetype(name="f5"), name="f5", version="generic")
OperatingSystem(archetype=Archetype(name="netinfra"), name="generic", version="generic")

# Vulcan2.0
Archetype(name="metacluster", is_compileable=True, cluster_type="meta", outputdesc="ESX")
Archetype(name="metacluster-old", cluster_type="meta", outputdesc="ESX")

Vendor(name="amd")
Vendor(name="intel")
Vendor(name="generic")
Vendor(name="dell")
Vendor(name="hp")
Vendor(name="ibm")
Vendor(name="verari")
Vendor(name="virtual")
Vendor(name="vmware")
Vendor(name="bnt")
Vendor(name="cisco")
Vendor(name="aurora_vendor")
Vendor(name="f5")

@amd Vendor(name="amd")
@intel Vendor(name="intel")
@hp Vendor(name="hp")
@ibm Vendor(name="ibm")
@dell Vendor(name="dell")

Cpu(vendor=@amd, name="opteron_2212", speed=2000)
Cpu(vendor=@intel, name="l5420", speed=2500)
Cpu(vendor=@intel, name="xeon_2500", speed=2500)
Cpu(vendor=@intel, name="xeon_2660", speed=2660)
Cpu(vendor=@intel, name="xeon_3000", speed=3000)
Cpu(vendor=@intel, name="xeon_5150", speed=2660)
Cpu(vendor=Vendor(name="aurora_vendor"), name="aurora_cpu", speed=0)
Cpu(vendor=Vendor(name="virtual"), name="virtual_cpu", speed=0)
Cpu(vendor=Vendor(name="f5"), name="f5_cpu", speed=0)

Model(vendor=Vendor(name="generic"), name="generic_nic", model_type="nic")
@generic_nic Model(vendor=Vendor(name="generic"), name="generic_nic", model_type="nic")

Model(vendor=@ibm, name="hs21-8853", model_type="blade")
Model(vendor=@hp, name="bl260c", model_type="blade")
Model(vendor=@hp, name="c-class", model_type="chassis")
Model(vendor=Vendor(name="verari"), name="vb1205xm", model_type="blade")
Model(vendor=@dell, name="poweredge_6650", model_type="rackmount")
Model(vendor=Vendor(name="bnt"), name="rs g8000", model_type="switch")
Model(vendor=Vendor(name="cisco"), name="ws-c2960-48tt-l", model_type="switch")
Model(vendor=Vendor(name="generic"), name="temp_switch", model_type="switch")
Model(vendor=Vendor(name="aurora_vendor"), name="aurora_chassis_model", model_type="aurora_chassis")
Model(vendor=Vendor(name="aurora_vendor"), name="aurora_model", model_type="aurora_node")
Model(vendor=Vendor(name="virtual"), name="vm", model_type="virtual_machine")
Model(vendor=Vendor(name="f5"), name="f5_model", model_type="rackmount")

MachineSpecs(model=Model(name="hs21-8853"),
             cpu=Cpu(name="xeon_2660"), cpu_quantity=2, memory=8192,
             controller_type="scsi", disk_type="local", disk_capacity=68,
	     nic_count=2, nic_model=@generic_nic)
MachineSpecs(model=Model(name="poweredge_6650"),
             cpu=Cpu(name="xeon_3000"), cpu_quantity=4, memory=16384,
             controller_type="scsi", disk_type="local", disk_capacity=36,
	     nic_count=2, nic_model=@generic_nic)
MachineSpecs(model=Model(name="bl260c"),
             cpu=Cpu(name="xeon_2500"), cpu_quantity=2, memory=24576,
             controller_type="scsi", disk_type="local", disk_capacity=36,
	     nic_count=2, nic_model=@generic_nic)
MachineSpecs(model=Model(name="vb1205xm"),
             cpu=Cpu(name="xeon_2500"), cpu_quantity=2, memory=24576,
             controller_type="scsi", disk_type="local", disk_capacity=36,
	     nic_count=2, nic_model=@generic_nic)
MachineSpecs(model=Model(name="aurora_model"),
             cpu=Cpu(name="aurora_cpu"), cpu_quantity=0, memory=0,
             controller_type="scsi", disk_type="local", disk_capacity=0,
	     nic_count=0, nic_model=@generic_nic)
MachineSpecs(model=Model(name="f5_model"),
             cpu=Cpu(name="f5_cpu"), cpu_quantity=0, memory=0,
             controller_type="scsi", disk_type="local", disk_capacity=0,
	     nic_count=0, nic_model=@generic_nic)
